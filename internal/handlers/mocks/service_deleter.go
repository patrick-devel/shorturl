// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/kspopova/GolandProjects/shorturl/internal/handlers/delete_shorturls.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockserviceDeleter is a mock of serviceDeleter interface.
type MockserviceDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockserviceDeleterMockRecorder
}

// MockserviceDeleterMockRecorder is the mock recorder for MockserviceDeleter.
type MockserviceDeleterMockRecorder struct {
	mock *MockserviceDeleter
}

// NewMockserviceDeleter creates a new mock instance.
func NewMockserviceDeleter(ctrl *gomock.Controller) *MockserviceDeleter {
	mock := &MockserviceDeleter{ctrl: ctrl}
	mock.recorder = &MockserviceDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockserviceDeleter) EXPECT() *MockserviceDeleterMockRecorder {
	return m.recorder
}

// DeleteShortURL mocks base method.
func (m *MockserviceDeleter) DeleteShortURL(ctx context.Context, shortUrls []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShortURL", ctx, shortUrls)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShortURL indicates an expected call of DeleteShortURL.
func (mr *MockserviceDeleterMockRecorder) DeleteShortURL(ctx, shortUrls interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShortURL", reflect.TypeOf((*MockserviceDeleter)(nil).DeleteShortURL), ctx, shortUrls)
}
